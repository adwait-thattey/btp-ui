[{"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/index.js":"1","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/App.js":"2","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/serviceWorker.js":"3","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/newDevice.js":"4","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/shared.js":"5","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/sharedDeviceInfo.js":"6","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/deviceData.js":"7","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/dashboard/dashboard.js":"8","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/marketplace/marketplace.js":"9","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/ownedDeviceInfo.js":"10","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/owned.js":"11","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/logs/logs.js":"12","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/utils/axios.js":"13","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/config/config.js":"14","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/hoc/Layout/Layout.js":"15","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/devices/MarketCard.js":"16","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/devices/Table.js":"17","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/hoc/Aux/aux.js":"18","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/Nav/Toolbar/Toolbar.js":"19","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/editTradeAgreement.js":"20","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/editDevice.js":"21","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/wishToBuy.js":"22"},{"size":503,"mtime":1602094587027,"results":"23","hashOfConfig":"24"},{"size":1958,"mtime":1608145943542,"results":"25","hashOfConfig":"24"},{"size":5086,"mtime":1602094587028,"results":"26","hashOfConfig":"24"},{"size":7363,"mtime":1608177476036,"results":"27","hashOfConfig":"24"},{"size":3984,"mtime":1608136802123,"results":"28","hashOfConfig":"24"},{"size":5669,"mtime":1608145922304,"results":"29","hashOfConfig":"24"},{"size":3687,"mtime":1608137437639,"results":"30","hashOfConfig":"24"},{"size":2903,"mtime":1606990305652,"results":"31","hashOfConfig":"24"},{"size":5370,"mtime":1608119595609,"results":"32","hashOfConfig":"24"},{"size":11797,"mtime":1608178385130,"results":"33","hashOfConfig":"24"},{"size":6064,"mtime":1608119671999,"results":"34","hashOfConfig":"24"},{"size":2566,"mtime":1608117711375,"results":"35","hashOfConfig":"24"},{"size":124,"mtime":1608118090385,"results":"36","hashOfConfig":"24"},{"size":85,"mtime":1608037711009,"results":"37","hashOfConfig":"24"},{"size":519,"mtime":1602094587027,"results":"38","hashOfConfig":"24"},{"size":2128,"mtime":1608038555807,"results":"39","hashOfConfig":"24"},{"size":935,"mtime":1606990255745,"results":"40","hashOfConfig":"24"},{"size":60,"mtime":1602094587026,"results":"41","hashOfConfig":"24"},{"size":1808,"mtime":1608117711373,"results":"42","hashOfConfig":"24"},{"size":5283,"mtime":1608145584810,"results":"43","hashOfConfig":"24"},{"size":4752,"mtime":1608129524500,"results":"44","hashOfConfig":"24"},{"size":5349,"mtime":1608175879420,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1462j1j",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/index.js",[],["104","105"],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/App.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/serviceWorker.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/newDevice.js",["106","107","108"],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/shared.js",["109"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MarketCard from '../../components/devices/MarketCard';\nimport Layout from '../../hoc/Layout/Layout'; \nimport API from '../../utils/axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst modifySharedDeevicesData = incoming_data => {\n\n    return incoming_data.map(data => {\n\n        const obj = {\n            id: data,\n            owner:\"Org2MSP\",\n            description:\"Shared Device\",\n            coverImage : \"/paella.jpg\"\n        }\n\n        return obj\n    })\n}\n\nexport default function SharedDevices(props) {\n  const classes = useStyles();\n  const [sharedDevices, setSharedDevices] = useState([]);\n\n  useEffect(() => {\n    async function fetchData(){\n      try {\n        const response = await API.post('/devices/shared/list');\n        setSharedDevices(modifySharedDeevicesData(response.data.data));\n      }catch(error){\n        console.log(error);\n      }\n\t  }\n\t\tfetchData();\n\t}, []);\n\n  // useEffect(() => {\n  //     setSharedDevices([\n  //       {\n  //         \"id\": \"abcd123\",\n  //         \"owner\": \"AdwaitOrg\",\n  //         \"name\": \"Shared Device 1\",\n  //         \"createdOn\":\"Nov 1, 2020\",\n  //         \"type\": \"type1\",\n  //         \"description\": \"Adwait's Device 1\",\n  //         \"lastUpdated\": 5,\n  //         \"coverImage\":\"/paella.jpg\"\n  //       },\n  //       {\n  //           \"id\": \"abcd345\",\n  //           \"owner\": \"SiddhantOrg\",\n  //           \"name\": \"Shared Device 2\",\n  //           \"createdOn\":\"Oct 22, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Siddhant's third device\",\n  //           \"lastUpdated\": 21,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"kkk12\",\n  //           \"owner\": \"MahhamadOrg\",\n  //           \"name\": \"Mahhamad's Device 2\",\n  //           \"createdOn\":\"July 1, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Mahammad's 2nd Device\",\n  //           \"lastUpdated\": 7,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"gfg45\",\n  //           \"owner\": \"AdwaitOrg\",\n  //           \"name\": \"Adwait Device 5\",\n  //           \"createdOn\":\"Oct 4, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Adwait's Device 5\",\n  //           \"lastUpdated\": 0,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n        \n  //     ])\n  // }, [])\n  \n  return (\n    <Layout>\n    <section>\n        <div style={ {width: '75%', textAlign:'center', marginLeft:'15vw', marginBottom:'50px'}}>\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {/* <Grid item xs={12}>\n                <Paper className={classes.paper}>xs=12</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid> */}\n                {sharedDevices.map((value) => (\n                  <Grid item xs={4} key={value.id}>\n                  <MarketCard device={value} actions={[\"Learn More\",]} />\n                  </Grid>\n                ))}\n                \n                {/* <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid> */}\n            </Grid>\n        </div>\n       </div>\n    </section>\n    </Layout>\n    \n  );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/sharedDeviceInfo.js",["110","111","112","113","114","115","116","117","118"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MarketCard from '../../components/devices/MarketCard';\nimport Layout from '../../hoc/Layout/Layout';\nimport API from '../../utils/axios';\nimport Table from \"../../components/devices/Table\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from \"@material-ui/core/Button\";\nimport config from \"../../config/config\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nconst modifyDevicedata = incomingdata => {\n\n    return incomingdata\n}\n\n\nexport default function OwnedDeviceInfo(props) {\n    const classes = useStyles();\n    const [deviceInfo, setDeviceInfo] = useState([]);\n    const [deviceTradeAgreement, setDeviceTradeAgreement] = useState([]);\n    const [deviceShareStatusInfo, setDeviceShareStatusInfo] = useState([]);\n    const [isDeviceShared, setIsDeviceShared] = useState(false)\n\n\n    const isDeviceSharedCheck = async (deviceId) => {\n        const response = await API.post('/devices/shared/list');\n        const data = response.data.data\n\n        console.log(\"Is SHared Check data \", data)\n        const isShared =  data.includes(deviceId);\n\n        console.log(isShared)\n\n        setIsDeviceShared(isShared)\n\n    }\n\n\n    useEffect(() => {\n      async function fetchData(){\n        try {\n\n        const res1 = await API.post(`/devices/`,{\"deviceId\":props.match.params.deviceId});\n          // const res2 = await API.get('/devices/shared/tradeAgreement');\n          // const res3 = await API.get('/devices/shared/shareStatus');\n\n            setDeviceInfo(modifyDevicedata(res1.data.data));\n          // setDeviceTradeAgreement(res2.data);\n          // setDeviceShareStatusInfo(res3.data);\n  \n        }catch(error){\n          console.log(error);\n        }\n      }\n      fetchData();\n\n      isDeviceSharedCheck(props.match.params.deviceId);\n    }, []);\n\n    // useEffect(() => {\n    //     setDeviceInfo(\n    //         {\n    //             \"id\": \"abcd123\",\n    //             \"owner\": \"AdwaitOrg\",\n    //             \"name\": \"Shared Device 1\",\n    //             \"createdOn\":\"Nov 1, 2020\",\n    //             \"type\": \"type1\",\n    //             \"description\": \"Adwait's Device 1\",\n    //             \"lastUpdated\": 5,\n    //             \"coverImage\":\"/paella.jpg\",\n    //             \"onSale\":true\n    //         })\n\n    //     setDeviceTradeAgreement(\n    //         {\n    //             \"id\":\"trade3345\",\n    //             \"price\":\"300\"\n    //         }\n    //     )\n\n    //     setDeviceShareStatusInfo(\n    //         {\n    //             \"shared\":true\n    //         }\n    //     )\n    // }, [])\n\n    const deviceInfoTabledData = () => {\n        const keysToDisplay = [\"deviceId\", \"owner\", \"description\", \"dataDescription\", \"onSale\"]\n        // const tradeAgreementKeysToDisplay = [\"id\", \"price\"]\n\n        const deviceInfoTableObject = []\n        for (const key of keysToDisplay) {\n            deviceInfoTableObject.push({\"key\":key, \"value\":deviceInfo[key]})\n        }\n\n        // for (const key of tradeAgreementKeysToDisplay) {\n        //     deviceInfoTableObject.push({\"key\":\"Trade \" + key, \"value\":deviceTradeAgreement[key]})\n        // }\n\n        // deviceInfoTableObject.push({\"key\":\"Shared\", \"value\":deviceShareStatusInfo[\"shared\"]})\n\n        return deviceInfoTableObject\n    }\n    const deviceInfoTabledColumns = () => {\n        return [\n            {title: '', field:'key'},\n            {title: '', field:'value'}\n        ]\n    }\n\n\n    return (\n        <Layout>\n            <section>\n                <div style={ {width: '75%', textAlign:'center', marginLeft:'150px', marginBottom:'50px'}}>\n                    <Table title=\"Device Details\" data={deviceInfoTabledData()} columns={deviceInfoTabledColumns()} pageSize={10} />\n                    <br/><br/>\n                    <br/> <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled={true}\n                        size=\"large\"\n                        className={classes.button}\n                        endIcon={<Icon>create</Icon>}\n                        onClick={() => { window.location = `/devices/edit/${props.match.params.deviceId}`}}\n                    >\n                        Edit Info\n                    </Button> &nbsp;&nbsp;\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        endIcon={<Icon>storage</Icon>}\n                        onClick={() => { window.location = \"/devices/data/\" + deviceInfo[\"deviceId\"] + \"?shared=true\" }}\n                    >\n                        View Data\n                    </Button> &nbsp;&nbsp;\n\n                    <Button\n                        variant=\"contained\"\n                        disabled={isDeviceShared}\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        endIcon={<Icon>check</Icon>}\n                        onClick={() => { window.location = \"/devices/wishtobuy/\" + deviceInfo[\"deviceId\"] + \"?shared=true\" }}\n                    >\n                        Interested To Buy\n                    </Button>\n                </div>\n            </section>\n        </Layout>\n\n    );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/deviceData.js",["119","120","121","122","123","124","125","126","127"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MarketCard from '../../components/devices/MarketCard';\nimport Layout from '../../hoc/Layout/Layout';\nimport API from '../../utils/axios';\nimport Table from \"../../components/devices/Table\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from \"@material-ui/core/Button\";\nimport config from \"../../config/config\";\nimport {Tooltip} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nconst modifyDevicedata = incomingdata => {\n\n    return incomingdata.map(data => {\n        data.data = data.dataJSON\n        data.txId = <Button> {data.transactionId}</Button>\n        return data\n    })\n}\n\nexport default function OwnedDeviceInfo(props) {\n    const classes = useStyles();\n    const [deviceData, setDeviceData] = useState([]);\n\n    useEffect(() => {\n      async function fetchData(){\n        try {\n          let response = await API.post(`/devices/data/all`, {\"deviceId\":props.match.params.deviceId});\n          setDeviceData(modifyDevicedata(response.data.data));\n        }catch(error){\n\n            console.log(\"Direct data retrieve failed. Trying shared data\")\n            const res1 = await API.post(`/devices/`,{\"deviceId\":props.match.params.deviceId});\n            const deviceData = res1.data.data\n            let response = await API.post(`/devices/shared/data/all`, {\"deviceId\":props.match.params.deviceId, \"ownerId\":deviceData.owner});\n            setDeviceData(modifyDevicedata(response.data.data));\n            console.log(error);\n        }\n      }\n      fetchData();\n    }, []);\n\n\n    // useEffect(() => {\n\n    //     setDeviceData( [\n    //         {\n    //             \"deviceId\":\"abcd1234\",\n    //             \"timestamp\": \"December 1, 2020, 8:15:30 am\",\n    //             \"data\": \"data5\",\n    //             \"txId\": \"tx05\"\n    //         },\n    //         {\n    //             \"deviceId\":\"abcd1234\",\n    //             \"timestamp\": \"December 1, 2020, 6:32:26 am\",\n    //             \"data\": \"data4\",\n    //             \"txId\": \"tx04\"\n    //         },\n    //         {\n    //             \"deviceId\":\"abcd1234\",\n    //             \"timestamp\": \"November 29, 2020, 6:14:55 pm\",\n    //             \"data\": \"data3\",\n    //             \"txId\": \"tx03\"\n    //         },\n    //         {\n    //             \"deviceId\":\"abcd1234\",\n    //             \"timestamp\": \"November 29, 2020, 4:15:30 am\",\n    //             \"data\": \"data2\",\n    //             \"txId\": \"tx02\"\n    //         },\n    //         {\n    //             \"deviceId\":\"abcd1234\",\n    //             \"timestamp\": \"November 29, 2020, 4:12:30 am\",\n    //             \"data\": \"data1\",\n    //             \"txId\": \"tx01\"\n    //         },\n    //     ]\n    // )\n\n    // }, [])\n\n    const dataColumns = () => {\n        return [\n\n            {title: 'timestamp', field:'timestamp'},\n            {title: 'data', field:'data'},\n            {title: 'TxID', field:'txId'},\n        ]\n    }\n\n    const { match: { params } } = props;\n    return (\n        <Layout>\n            <section>\n                <div style={ {width: '75%', textAlign:'center', marginLeft:'150px', marginBottom:'50px'}}>\n                    <Table title={params.deviceId + \" Data\"} data={deviceData} columns={dataColumns()}  />\n\n                </div>\n            </section>\n        </Layout>\n\n    );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/dashboard/dashboard.js",["128"],"import React, { Component } from 'react';\nimport Table from '../../components/devices/Table';\nimport Layout from '../../hoc/Layout/Layout'; \nimport API from '../../utils/axios';\n// import axios from 'axios';\n\nclass Dashboard extends Component {\n    state = {\n        data: [\n            {\n              \"deviceID\": \"abcd123\",\n              \"deviceName\": \"Device1\",\n              \"deviceType\": \"temperature\",\n              \"allowedIPs\": \"127.0.0.1,192,168,1,3\",\n              \"allowedUsers\": \"adwait,brijesh\",\n              \"latestData\": \"35.3\"\n            },\n            {\n              \"deviceID\": \"abcd456\",\n              \"deviceName\": \"Device2\",\n              \"deviceType\": \"pressure\",\n              \"allowedIPs\": \"127.0.0.1, 53.125.1.3\",\n              \"allowedUsers\": \"adwait\",\n              \"latestData\": \"10.33\"\n            },\n            {\n              \"deviceID\": \"xyz123\",\n              \"deviceName\": \"Device3\",\n              \"deviceType\": \"temperature\",\n              \"allowedIPs\": \"127.0.0.1, 192.168.1.3\",\n              \"allowedUsers\": \"brijesh\",\n              \"latestData\": \"42.2\"\n            },\n            {\n              \"deviceID\": \"fgdg\",\n              \"deviceName\": \"Device4\",\n              \"deviceType\": \"speedometer\",\n              \"allowedIPs\": \"127.0.0.1, 192.168.1.3\",\n              \"allowedUsers\": \"adwait,brijesh\",\n              \"latestData\": \"57.7\"\n            }\n          ],\n        columns: [\n            {title: 'Device ID', field:'deviceID'},\n            {title: 'Device Name', field:'deviceName'},\n            {title: 'Device Type', field:'deviceType'},\n            {title: 'Allowed IPs', field:'allowedIPs'},\n            {title: 'Allowed Users', field:'allowedUsers'},\n            {title: 'Latest Data', field:'latestData'},\n        ]\n    };\n\n    async componentDidMount() {\n        try {\n            const res = await API.get('devices/');        \n            this.setState({ data: this.getRequiredInfo(res.data) });\n            console.log(res.data)\n                    \n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    getRequiredInfo = (devices) => {\n        let obtainedDevices = [];\n\n        devices.map(device => (\n            obtainedDevices.push({\n                deviceID: device.deviceID,\n                deviceName: device.deviceName,\n                deviceType: device.deviceType,\n                allowedIPs: device.allowedIPs,\n                allowedUsers: device.allowedUsers,\n                latestData: device.latestData\n            })\n        ))\n\n        return obtainedDevices;\n    }\n\n    render() {\n        return (\n            <Layout>\n                <section>\n                    <div style={ {width: '75%', textAlign:'center', marginLeft:'150px', marginBottom:'50px'}}>\n                        Dashboard\n                   </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\n\nexport default Dashboard;","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/marketplace/marketplace.js",["129"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MarketCard from '../../components/devices/MarketCard';\nimport Layout from '../../hoc/Layout/Layout'; \nimport API from '../../utils/axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst modifyMarketData = (incomingData) => {\n\n/*\n* Incoming:\n* [\n        {\n            \"owner\": \"Org1MSP\",\n            \"deviceId\": \"o1dev2\",\n            \"dataDescription\": \"Same random 01 data\",\n            \"description\": \"new details of device 002\",\n            \"onSale\": true\n        },\n        {\n            \"owner\": \"Org1MSP\",\n            \"deviceId\": \"o1dev3\",\n            \"dataDescription\": \"Same random 03 data\",\n            \"description\": \"new details of device 002\",\n            \"onSale\": true\n        }\n    ]\n*\n* Out:\n*   [\n        {\n          \"id\": \"abcd123\",\n          \"owner\": \"Org1MSP\",\n          \"name\": \"Adwait's Device 1\",\n          \"createdOn\":\"Nov 1, 2020\",\n          \"type\": \"type1\",\n          \"description\": \"Adwait's Device 1\",\n          \"lastUpdated\": 5,\n          \"coverImage\":\"/paella.jpg\"\n        },\n        {\n            \"id\": \"abcd345\",\n            \"owner\": \"SiddhantOrg\",\n            \"name\": \"Siddhant's Device 3\",\n            \"createdOn\":\"Oct 22, 2020\",\n            \"type\": \"type1\",\n            \"description\": \"Siddhant's third device\",\n            \"lastUpdated\": 21,\n            \"coverImage\":\"/paella.jpg\"\n          },\n      ]\n* */\n        console.log(\"API Response\", incomingData)\n        return incomingData.map(data => {\n            data.id = data.deviceId\n            data.coverImage = \"/paella.jpg\"\n            return data\n        })\n}\n\nexport default function Marketplace(props) {\n  const classes = useStyles();\n  const [marketDevices, setMarketDevices] = useState([]);\n  \n\tuseEffect(() => {\n    async function fetchData(){\n      try {\n        const response = await API.post('/market/devices/onsale');\n        setMarketDevices(modifyMarketData(response.data.data));\n      }catch(error){\n        console.log(error);\n      }\n\t  }\n\t\tfetchData();\n\t}, []);\n\n  // useEffect(() => {\n  //     setMarketDevices([\n  //       {\n  //         \"id\": \"abcd123\",\n  //         \"owner\": \"Org1MSP\",\n  //         \"name\": \"Adwait's Device 1\",\n  //         \"createdOn\":\"Nov 1, 2020\",\n  //         \"type\": \"type1\",\n  //         \"description\": \"Adwait's Device 1\",\n  //         \"lastUpdated\": 5,\n  //         \"coverImage\":\"/paella.jpg\"\n  //       },\n  //       {\n  //           \"id\": \"abcd345\",\n  //           \"owner\": \"SiddhantOrg\",\n  //           \"name\": \"Siddhant's Device 3\",\n  //           \"createdOn\":\"Oct 22, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Siddhant's third device\",\n  //           \"lastUpdated\": 21,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"kkk12\",\n  //           \"owner\": \"MahhamadOrg\",\n  //           \"name\": \"Mahhamad's Device 2\",\n  //           \"createdOn\":\"July 1, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Mahammad's 2nd Device\",\n  //           \"lastUpdated\": 7,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"gfg45\",\n  //           \"owner\": \"AdwaitOrg\",\n  //           \"name\": \"Adwait Device 5\",\n  //           \"createdOn\":\"Oct 4, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Adwait's Device 5\",\n  //           \"lastUpdated\": 0,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"lalapop\",\n  //           \"owner\": \"AdwaitOrg\",\n  //           \"name\": \"Ad Dev 7\",\n  //           \"createdOn\":\"Nov 3, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Adwait's Device 7\",\n  //           \"lastUpdated\": 53,\n  //           \"coverImage\":\"/paella.jpg\"\n  //         },\n\n  //     ])\n  // }, [])\n  \n  return (\n    <Layout>\n    <section>\n        <div style={ {width: '75%', textAlign:'center', marginLeft:'15vw', marginBottom:'50px'}}>\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {/* <Grid item xs={12}>\n                <Paper className={classes.paper}>xs=12</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid> */}\n                {marketDevices.map((value) => (\n                  <Grid item xs={4} key={value.id} >\n                  <MarketCard device={value} />\n                  </Grid>\n                ))}\n                \n                {/* <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid> */}\n            </Grid>\n        </div>\n       </div>\n    </section>\n    </Layout>\n    \n  );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/ownedDeviceInfo.js",["130","131","132","133","134","135"],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/owned.js",["136"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MarketCard from '../../components/devices/MarketCard';\nimport Layout from '../../hoc/Layout/Layout'; \nimport API from '../../utils/axios';\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst modifyOwnedDevicesData = incomingData => {\n\n    /*\n    * Incoming:\n    * [\n            {\n                \"owner\": \"Org1MSP\",\n                \"deviceId\": \"o1dev2\",\n                \"dataDescription\": \"Same random 01 data\",\n                \"description\": \"new details of device 002\",\n                \"onSale\": true\n            },\n            {\n                \"owner\": \"Org1MSP\",\n                \"deviceId\": \"o1dev3\",\n                \"dataDescription\": \"Same random 03 data\",\n                \"description\": \"new details of device 002\",\n                \"onSale\": true\n            }\n        ]\n    *\n    * Out:\n    *   [\n            {\n              \"id\": \"abcd123\",\n              \"owner\": \"Org1MSP\",\n              \"name\": \"Adwait's Device 1\",\n              \"createdOn\":\"Nov 1, 2020\",\n              \"type\": \"type1\",\n              \"description\": \"Adwait's Device 1\",\n              \"lastUpdated\": 5,\n              \"coverImage\":\"/paella.jpg\"\n            },\n            {\n                \"id\": \"abcd345\",\n                \"owner\": \"SiddhantOrg\",\n                \"name\": \"Siddhant's Device 3\",\n                \"createdOn\":\"Oct 22, 2020\",\n                \"type\": \"type1\",\n                \"description\": \"Siddhant's third device\",\n                \"lastUpdated\": 21,\n                \"coverImage\":\"/paella.jpg\"\n              },\n          ]\n    * */\n    console.log(\"API Response\", incomingData)\n    return incomingData.map(data => {\n        data.id = data.deviceId\n        data.coverImage = \"/paella.jpg\"\n        return data\n    })\n}\n\nexport default function OwnedDevices(props) {\n  const classes = useStyles();\n  const [ownedDevices, setOwnedDevices] = useState([]);\n  \n  useEffect(() => {\n\n    async function fetchData(){\n      try {\n        const response = await API.post('/devices/all');\n        setOwnedDevices(modifyOwnedDevicesData(response.data.data));\n      }catch(error){\n        console.log(error);\n      }\n\t  }\n\t\tfetchData();\n\t}, []);\n\n  // useEffect(() => {\n  //     setOwnedDevices([\n  //       {\n  //         \"id\": \"abcd123\",\n  //         \"owner\": \"Org1MSP\",\n  //         \"name\": \"Adwait's Device 1\",\n  //         \"createdOn\":\"Nov 1, 2020\",\n  //         \"type\": \"type1\",\n  //         \"description\": \"Adwait's Device 1\",\n  //         \"lastUpdated\": 5,\n  //         \"coverImage\":\"/reptile.jpg\"\n  //       },\n  //       {\n  //           \"id\": \"abcd345\",\n  //           \"owner\": \"Org1MSP\",\n  //           \"name\": \"Siddhant's Device 3\",\n  //           \"createdOn\":\"Oct 22, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Siddhant's third device\",\n  //           \"lastUpdated\": 21,\n  //           \"coverImage\":\"/reptile.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"kkk12\",\n  //           \"owner\": \"Org1MSP\",\n  //           \"name\": \"Mahhamad's Device 2\",\n  //           \"createdOn\":\"July 1, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Mahammad's 2nd Device\",\n  //           \"lastUpdated\": 7,\n  //           \"coverImage\":\"/reptile.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"gfg45\",\n  //           \"owner\": \"Org1MSP\",\n  //           \"name\": \"Adwait Device 5\",\n  //           \"createdOn\":\"Oct 4, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Adwait's Device 5\",\n  //           \"lastUpdated\": 0,\n  //           \"coverImage\":\"/reptile.jpg\"\n  //         },\n  //         {\n  //           \"id\": \"lalapop\",\n  //           \"owner\": \"Org1MSP\",\n  //           \"name\": \"Ad Dev 7\",\n  //           \"createdOn\":\"Nov 3, 2020\",\n  //           \"type\": \"type1\",\n  //           \"description\": \"Adwait's Device 7\",\n  //           \"lastUpdated\": 53,\n  //           \"coverImage\":\"/reptile.jpg\"\n  //         },\n        \n  //     ])\n  // }, [])\n  \n  return (\n    <Layout>\n    <section>\n        <div style={ {width: '75%', textAlign:'center', marginLeft:'15vw', marginBottom:'50px'}}>\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {/* <Grid item xs={12}>\n                <Paper className={classes.paper}>xs=12</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>xs=6</Paper>\n                </Grid> */}\n                {ownedDevices.map((value) => (\n                  <Grid item xs={4} key={value.id}>\n                  <MarketCard device={value} />\n                  </Grid>\n                ))}\n                <Grid item xs={4}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        className={classes.button}\n                        endIcon={<Icon>add</Icon>}\n                        onClick={() => { window.location = \"/devices/new\"}}\n                    >\n                        New Device\n                    </Button>\n                </Grid>\n                {/* <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid>\n                <Grid item xs={3}>\n                <Paper className={classes.paper}>xs=3</Paper>\n                </Grid> */}\n            </Grid>\n        </div>\n       </div>\n    </section>\n    </Layout>\n    \n  );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/logs/logs.js",["137"],"import React, { useEffect, useState, Component } from 'react';\nimport Table from '../../components/devices/Table';\nimport Layout from '../../hoc/Layout/Layout'; \nimport API from '../../utils/axios';\n// import axios from 'axios';\n\nfunction TransactionLog(props) {\n\n    const [transactions, setTransactions] = useState([]);\n\n    useEffect(() => {\n      async function fetchData(){\n        try {\n          const response = await API.get('/transactions');\n          setTransactions(response.data);\n        }catch(error){\n          console.log(error);\n        }\n      }\n      fetchData();\n    }, []);\n\n    const transactionData = () => {\n        return transactions;\n    }\n\n    const transactionColumns = () => {\n        return [\n            {title: 'Transaction ID', field:'txId'},\n            {title: 'Timestamp', field:'timestamp'},\n            {title: 'Details', field:'details'},\n            {title: 'Endorsed By', field:'endorser'},\n        ]\n    }\n\n    // state = {\n    //     data: [\n    //         {\n    //           \"txId\": \"tx1234\",\n    //           \"details\": \"Register New Device 1234\",\n    //           \"endorser\": \"Org1MSP\",\n    //           \"timestamp\":\"December 1, 2020, 8:15:30 am\"\n    //         },\n    //         {\n    //             \"txId\": \"tx4567\",\n    //             \"details\": \"Add Data to device 4576\",\n    //             \"endorser\": \"Org2MSP\",\n    //             \"timestamp\":\"December 1, 2020, 6:32:26 am\"\n    //         },\n    //         {\n    //             \"txId\": \"tx1112\",\n    //             \"details\": \"Update Device 444\",\n    //             \"endorser\": \"Org2MSP\",\n    //             \"timestamp\":\"November 29, 2020, 6:14:55 pm\"\n    //         },\n    //         {\n    //             \"txId\": \"tx888\",\n    //             \"details\": \"Add Data to device 1123\",\n    //             \"endorser\": \"Org1MSP\",\n    //             \"timestamp\":\"November 29, 2020, 4:15:30 am\"\n    //         },\n    //       ],\n    //     columns: [\n    //         {title: 'Transaction ID', field:'txId'},\n    //         {title: 'Timestamp', field:'timestamp'},\n    //         {title: 'Details', field:'details'},\n    //         {title: 'Endorsed By', field:'endorser'},\n\n\n    //     ]\n    // };\n\n    return (\n        <Layout>\n            <section>\n                <div style={ {width: '75%', textAlign:'center', marginLeft:'150px', marginBottom:'50px'}}>\n                    <Table title=\"Device Details\" data={transactionData()} columns={transactionColumns()}  />\n                </div>\n            </section>\n        </Layout>\n    );\n}\n\n\nexport default TransactionLog;","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/utils/axios.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/config/config.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/hoc/Layout/Layout.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/devices/MarketCard.js",["138"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport config from \"../../config/config\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function MarketCard(props) {\n  const classes = useStyles();\n  const device = props.device\n  const deviceInfoPageLink = () => {\n    if (device.owner === config.orgMSP) {\n      return \"/devices/owned/\" + device.id\n    }\n    else {\n      return \"/devices/shared/\" + device.id\n    }\n  }\n  return (\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n              className={classes.media}\n              image={device.coverImage}\n              title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n              {device.id}\n            </Typography>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\n              {device.owner}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {device.description}\n              <br /><br/>\n\n              {/*<a href={deviceInfoPageLink()}>View Details</a>*/}\n              <Button variant=\"outlined\" color=\"secondary\" onClick={()=>{window.location = deviceInfoPageLink()}}>\n                View Details\n              </Button>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        {/*<CardActions>\n          <Button size=\"small\" color=\"primary\">\n            <a href=\"/devices\">Owned Devices</a>\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>*/}\n      </Card>\n  );\n}\n","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/devices/Table.js",["139","140"],"import React from 'react'\nimport MaterialTable from 'material-table'\nimport { Select } from '@material-ui/core'\n\nconst Table = (props) => {\n    return ( <div> \n        <MaterialTable\n            title={props.title}\n            options= {\n                {\n                    paging: true,\n                    headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                    },\n                }\n            }\n            data = {props.data}\n            columns= {props.columns}\n            detailPanel={rowData => {\n                return (\n\n                  <iframe\n                    width=\"100%\"\n                    height=\"150\"\n                    src='http://localhost:8000/devices/abcd123'\n                  />\n                )\n              }}\n              onRowClick={(event, rowData, togglePanel) => togglePanel()}\n        />\n    </div>)\n}\n\nexport default Table","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/hoc/Aux/aux.js",[],"/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/components/Nav/Toolbar/Toolbar.js",["141","142"],"import React, { useState } from 'react'\nimport './Toolbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons'\n\nfunction Toolbar(props){\n\n    return (\t\n        <header className=\"header\">\n          <ul className='items'>\n                <li><a href=\"/marketplace\">Marketplace </a></li>\n                <li><a href=\"/devices/owned\">My Devices </a></li>\n                <li><a href=\"/devices/shared\">Shared Devices </a></li>\n                <li><a href=\"/transactions\">Transaction Logs </a></li>\n                <li><a href=\"/logout\">Logout </a></li>\n           </ul>           \n            <ul className=\"icons\">\n                <NavIcon icon={<FontAwesomeIcon icon={faUsers} size=\"lg\" />} >\n                    <DropdownMenu />\n                </NavIcon>\n            </ul>\n        </header>\n    )\n}\n\nfunction NavIcon(props){\n\n    const [open, setOpen] = useState(false)\n    \n    return (\n        <li className='nav-icon'>\n            <a href='#' className='icon-button' onClick = {()=> setOpen(!open)} >\n                {props.icon}\n            </a>\n            {open && props.children}\n       </li>     \n    );\n}\n\nfunction DropdownMenu() {\n    return (\n      <div className=\"dropdown\">\n          <DropdownItem leftIcon={<FontAwesomeIcon icon={faUsers} size=\"lg\" />}>Org1</DropdownItem>\n          <DropdownItem leftIcon={<FontAwesomeIcon icon={faUsers} size=\"lg\" />}>Org2</DropdownItem>\n          <DropdownItem leftIcon={<FontAwesomeIcon icon={faUsers} size=\"lg\" />}>org3</DropdownItem>\n      </div>\n    )\n}\n\nfunction DropdownItem(props) {\n    return (\n      <a href=\"#\" className=\"menu-item\">\n        <span className=\"icon-button\">{props.leftIcon}</span>\n        {props.children}\n      </a>\n    );\n  }\n  \n\nexport default Toolbar","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/editTradeAgreement.js",["143","144","145"],"import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../../hoc/Layout/Layout';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\n// import KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from '../../utils/axios';\nimport {Checkbox, Switch, TextareaAutosize} from '@material-ui/core';\n\nclass EditTradeAgreement extends Component{\n\n  state = {\n    deviceId: this.props.match.params.deviceId,\n    tradeId:'',\n    tradePrice: '',\n    tradeRevokeTime: '',\n\n  }\n\n\n\n  handleChange = input => event => {\n    console.log(\"Handle change called\")\n    const formFields = {...this.state}\n    formFields[input] = event.target.value;\n    this.setState(formFields);\n\n\n    console.log(this.state)\n\n  };\n\n  handleSubmit = (event) => {\n    console.log(\"Starting Submission for Create Device\")\n    console.log(this.state)\n    const inputdata = this.state\n    event.preventDefault();\n    const data = {\n      deviceId: this.state.deviceId,\n      tradeId: this.state.tradeId,\n      // name: this.state.deviceName,\n      tradePrice: parseInt(this.state.tradePrice),\n      revoke_time: new Date(this.state.tradeRevokeTime).getTime()/1000,\n    }\n    try{\n      async function postData(){\n        const response = await API.post('/devices/agreetosell', data );\n        console.log(response.data);\n        window.location = `/devices/owned/${inputdata.deviceId}`;\n        \n      }\n      postData();\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  render(){\n    return (\n      <Layout>\n        <section>\n          <Grid container spacing={3}>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                  <div>\n                    <div>\n                      <TextField \n                        required \n                        id=\"device-id\" \n                        label=\"Device ID\" \n                        onChange={this.handleChange('deviceId')} \n                        variant=\"outlined\"\n                        value={this.state.deviceId}\n                      />\n                    </div>\n  \n                    <br></br>\n                    <div>\n                      <TextField\n                          required\n                          id=\"trade-id\"\n                          label=\"Trade ID\"\n                          onChange={this.handleChange('tradeId')}\n                          variant=\"outlined\"\n                          value={this.state.tradeId}\n                      />\n                    </div>\n\n                    <br></br>\n                    <div>\n                      <TextField\n                          required\n                          id=\"device-description\"\n                          onChange={this.handleChange('tradePrice')}\n                          label=\"Trade Price\"\n                          variant=\"outlined\"\n                          value={this.state.tradePrice}\n                      />\n                    </div>\n                    <br></br>\n\n{/*                    <div>\n                      <TextField \n                        required \n                        id=\"device-dataDescription\"\n                        label=\"Data Description\"\n                        onChange={this.handleChange('dataDescription')}\n                        variant=\"outlined\" />\n                    </div>\n                    <br></br>*/}\n  \n\n  \n                    <div>\n                      <TextField\n                          id=\"datetime-local\"\n                          label=\"Revoke Time\"\n                          type=\"datetime-local\"\n                          defaultValue=\"2020-12-17T00:00\"\n                          // className={classes.textField}\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                          variant=\"outlined\"\n                          onChange={this.handleChange(\"tradeRevokeTime\")}\n                      />\n                    </div>\n                    <br/><br/>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        type=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </div>\n                </form>\n              </Paper>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </section>\n      </Layout>\n    );\n  }\n}\nconst classes = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default EditTradeAgreement;","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/editDevice.js",["146","147","148"],"import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../../hoc/Layout/Layout';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\n// import KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from '../../utils/axios';\nimport {Checkbox, Switch, TextareaAutosize} from '@material-ui/core';\n\nclass EditDevice extends Component{\n\n  state = {\n    deviceId: this.props.match.params.deviceId,\n    dataDescription: '',\n    deviceDescription: '',\n\n  }\n\n\n\n  handleChange = input => event => {\n    const formFields = {...this.state}\n    formFields[input] = event.target.value;\n    this.setState(formFields);\n\n\n  };\n\n  handleSubmit = async (event) => {\n    console.log(\"Starting Submission for Create Device\")\n    event.preventDefault();\n    const getResponse = await API.post('/devices/', {\"deviceId\":\"o1dev2\"});\n    const data = {\n      deviceId: this.state.deviceId,\n      // name: this.state.deviceName,\n      description: this.state.deviceDescription,\n      on_sale:getResponse.data.data.onSale\n    }\n    try{\n      async function postData(){\n        console.log(\"Input data\", data)\n        const response = await API.post('/devices/update', data );\n        console.log(response.data);\n        window.location = `/devices/owned/${data.deviceId}`;\n        \n      }\n      postData();\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  render(){\n    return (\n      <Layout>\n        <section>\n          <Grid container spacing={3}>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                  <div>\n                    <div>\n                      <TextField \n                        required \n                        id=\"device-id\" \n                        label=\"Device ID\" \n                        onChange={this.handleChange('deviceId')} \n                        variant=\"outlined\"\n                        value={this.state.deviceId}\n                      />\n                    </div>\n  \n                    <br></br>\n\n                    <div>\n                      <TextField\n                          required\n                          id=\"device-description\"\n                          onChange={this.handleChange('deviceDescription')}\n                          label=\"Device Description\"\n                          variant=\"outlined\"\n                          value={this.state.deviceDescription}\n                      />\n                    </div>\n                    <br></br>\n\n{/*                    <div>\n                      <TextField \n                        required \n                        id=\"device-dataDescription\"\n                        label=\"Data Description\"\n                        onChange={this.handleChange('dataDescription')}\n                        variant=\"outlined\" />\n                    </div>\n                    <br></br>*/}\n\n\n                    {/*<div>\n                      <Switch\n                          checked={false}\n                          onChange={this.handleChange('onSale')}\n                          name=\"deviceOnSale\"\n                          // inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                      <Checkbox\n                          checked={false}\n                          onChange={this.handleChange('onSale')}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                      />\n                    </div>*/}\n                    <br/><br/>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        type=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </div>\n                </form>\n              </Paper>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </section>\n      </Layout>\n    );\n  }\n}\nconst classes = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default EditDevice;","/run/media/coderdude/Adwait/Projects/btp_fabric/btp-ui/src/containers/mydevices/wishToBuy.js",["149","150","151"],"import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../../hoc/Layout/Layout';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\n// import KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from '../../utils/axios';\nimport {Checkbox, Switch, TextareaAutosize} from '@material-ui/core';\n\nclass WishToBuy extends Component{\n\n  state = {\n    deviceId: this.props.match.params.deviceId,\n    sellerId:'',\n    tradeId:'',\n    tradePrice: '',\n    tradeRevokeTime: '',\n\n  }\n\n\n\n  handleChange = input => event => {\n    console.log(\"Handle change called\")\n    const formFields = {...this.state}\n    formFields[input] = event.target.value;\n    this.setState(formFields);\n\n\n    console.log(this.state)\n\n  };\n\n  handleSubmit = (event) => {\n    console.log(\"Starting Submission for Create Device\")\n    console.log(this.state)\n    const inputdata = this.state\n    event.preventDefault();\n    const data = {\n      deviceId: this.state.deviceId,\n      tradeId: this.state.tradeId,\n      seller_id: this.state.sellerId,\n      tradePrice: parseInt(this.state.tradePrice),\n      revoke_time: new Date(this.state.tradeRevokeTime).getTime()/1000,\n    }\n    try{\n      async function postData(){\n        const response = await API.post('/market/devices/interesttokens/submit', data );\n        console.log(response.data);\n        window.location = `/devices/shared/${inputdata.deviceId}`;\n        \n      }\n      postData();\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  render(){\n    return (\n      <Layout>\n        <section>\n          <Grid container spacing={3}>\n            <Grid item xs={4}></Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\n                  <div>\n                    <div>\n                      <TextField \n                        required \n                        id=\"device-id\" \n                        label=\"Device ID\" \n                        onChange={this.handleChange('deviceId')} \n                        variant=\"outlined\"\n                        value={this.state.deviceId}\n                      />\n                    </div>\n  \n                    <br></br>\n                    <div>\n                      <TextField\n                          required\n                          id=\"trade-id\"\n                          label=\"Trade ID\"\n                          onChange={this.handleChange('tradeId')}\n                          variant=\"outlined\"\n                          value={this.state.tradeId}\n                      />\n                    </div>\n\n                    <br></br>\n\n                    <div>\n                      <TextField\n                          required\n                          id=\"seller-id\"\n                          label=\"Seller ID\"\n                          onChange={this.handleChange('sellerId')}\n                          variant=\"outlined\"\n                          value={this.state.sellerId}\n                      />\n                    </div>\n\n                    <br></br>\n\n                    <div>\n                      <TextField\n                          required\n                          id=\"device-description\"\n                          onChange={this.handleChange('tradePrice')}\n                          label=\"Trade Price\"\n                          variant=\"outlined\"\n                          value={this.state.tradePrice}\n                      />\n                    </div>\n                    <br></br>\n  \n                    <div>\n                      <TextField\n                          id=\"datetime-local\"\n                          label=\"Revoke Time\"\n                          type=\"datetime-local\"\n                          defaultValue=\"2020-12-17T00:00\"\n                          // className={classes.textField}\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                          variant=\"outlined\"\n                          onChange={this.handleChange(\"tradeRevokeTime\")}\n                      />\n                    </div>\n                    <br/><br/>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                        type=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </div>\n                </form>\n              </Paper>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </section>\n      </Layout>\n    );\n  }\n}\nconst classes = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default WishToBuy;",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":13,"column":29,"nodeType":"158","messageId":"159","endLine":13,"endColumn":35},{"ruleId":"156","severity":1,"message":"161","line":13,"column":37,"nodeType":"158","messageId":"159","endLine":13,"endColumn":53},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"163","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":12},{"ruleId":"156","severity":1,"message":"164","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"165","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":14},{"ruleId":"156","severity":1,"message":"166","line":33,"column":12,"nodeType":"158","messageId":"159","endLine":33,"endColumn":32},{"ruleId":"156","severity":1,"message":"167","line":33,"column":34,"nodeType":"158","messageId":"159","endLine":33,"endColumn":57},{"ruleId":"156","severity":1,"message":"168","line":34,"column":12,"nodeType":"158","messageId":"159","endLine":34,"endColumn":33},{"ruleId":"156","severity":1,"message":"169","line":34,"column":35,"nodeType":"158","messageId":"159","endLine":34,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":71,"column":8,"nodeType":"172","endLine":71,"endColumn":10,"suggestions":"173"},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"163","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":12},{"ruleId":"156","severity":1,"message":"164","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"174","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":12},{"ruleId":"156","severity":1,"message":"165","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":14},{"ruleId":"156","severity":1,"message":"175","line":12,"column":9,"nodeType":"158","messageId":"159","endLine":12,"endColumn":16},{"ruleId":"156","severity":1,"message":"176","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":18},{"ruleId":"156","severity":1,"message":"177","line":36,"column":11,"nodeType":"158","messageId":"159","endLine":36,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":55,"column":8,"nodeType":"172","endLine":55,"endColumn":10,"suggestions":"178"},{"ruleId":"156","severity":1,"message":"179","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"163","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":12},{"ruleId":"156","severity":1,"message":"164","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"165","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":138,"column":6,"nodeType":"172","endLine":138,"endColumn":8,"suggestions":"180"},{"ruleId":"156","severity":1,"message":"181","line":175,"column":11,"nodeType":"158","messageId":"159","endLine":175,"endColumn":15},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"182","line":1,"column":38,"nodeType":"158","messageId":"159","endLine":1,"endColumn":47},{"ruleId":"156","severity":1,"message":"183","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":19},{"ruleId":"156","severity":1,"message":"184","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":23,"column":19,"nodeType":"187","endLine":27,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":32,"column":13,"nodeType":"187","endLine":32,"endColumn":82},{"ruleId":"188","severity":1,"message":"189","line":52,"column":7,"nodeType":"187","endLine":52,"endColumn":41},{"ruleId":"156","severity":1,"message":"157","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":13,"column":19,"nodeType":"158","messageId":"159","endLine":13,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":13,"column":27,"nodeType":"158","messageId":"159","endLine":13,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":13,"column":19,"nodeType":"158","messageId":"159","endLine":13,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":13,"column":27,"nodeType":"158","messageId":"159","endLine":13,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":13,"column":19,"nodeType":"158","messageId":"159","endLine":13,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":13,"column":27,"nodeType":"158","messageId":"159","endLine":13,"endColumn":43},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'TextareaAutosize' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'MarketCard' is defined but never used.","'config' is defined but never used.","'deviceTradeAgreement' is assigned a value but never used.","'setDeviceTradeAgreement' is assigned a value but never used.","'deviceShareStatusInfo' is assigned a value but never used.","'setDeviceShareStatusInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.deviceId'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'Icon' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.",["193"],"'Table' is defined but never used.",["194"],"'res2' is assigned a value but never used.","'Component' is defined but never used.","'CardActions' is defined but never used.","'Select' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"195","fix":"198"},"Update the dependencies array to be: [props.match.params.deviceId]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},[2133,2135],"[props.match.params.deviceId]",[1942,1944],[4014,4016]]